knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
traindata <- read.csv("train_set.csv")
testdata <- read.csv("test_set.csv")
head(traindata)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
ggplot(traindata, aes(x = as.factor('单位名称'))) + geom_bar()
ggplot(traindata, aes(x = as.factor(单位名称))) + geom_bar()
ggplot(traindata, aes(x = 单位名称)) + geom_bar()
ggplot(traindata, aes(x = reorder(单位名称))) + geom_bar()
ggplot(traindata, aes(x = reorder(单位名称, length(单位名称)))) + geom_bar()
ggplot(traindata, aes(x = reorder(单位名称, rep(1, length(单位名称)), sum))) + geom_bar()
ggplot(traindata, aes(x = reorder(单位名称, -rep(1, length(单位名称)), sum))) + geom_bar()
ggplot(traindata, aes(x = reorder(单位名称, -rep(1, length(单位名称)), sum))) + geom_bar() +
labs(x = '单位名称', y = '市民投诉量')
ggplot(traindata, aes(x = reorder(单位名称, -rep(1, length(单位名称)), sum))) + geom_bar(fill = 'green') +
labs(x = '单位名称', y = '市民投诉量')
ggplot(traindata, aes(x = reorder(单位名称, -rep(1, length(单位名称)), sum))) + geom_bar(fill = '#ffff00') +
labs(x = '单位名称', y = '市民投诉量')
ggplot(traindata, aes(x = reorder(单位名称, -rep(1, length(单位名称)), sum))) + geom_bar() +
labs(x = '单位名称', y = '市民投诉量')
ggplot(traindata, aes(x = reorder(单位名称, -rep(1, length(单位名称)), sum))) + geom_bar(fill = "#8FBC94") +
labs(x = '单位名称', y = '市民投诉量')
ggplot(traindata, aes(x = reorder(单位名称, -rep(1, length(单位名称)), sum))) + geom_bar(fill = "#548687") +
labs(x = '单位名称', y = '市民投诉量')
ggplot(traindata, aes(x = reorder(单位名称, -rep(1, length(单位名称)), sum))) + geom_bar(fill = "#548687") +
labs(x = '单位名称', y = '市民投诉量', main = '训练集中各个政府单位接到市民投诉量的柱状图')
ggplot(traindata, aes(x = reorder(单位名称, -rep(1, length(单位名称)), sum))) + geom_bar(fill = "#548687") +
labs(x = '单位名称', y = '市民投诉量', bottom = '训练集中各个政府单位接到市民投诉量的柱状图')
ggplot(traindata, aes(x = reorder(单位名称, -rep(1, length(单位名称)), sum))) + geom_bar(fill = "#548687") +
labs(x = '单位名称', y = '市民投诉量', top = '训练集中各个政府单位接到市民投诉量的柱状图')
ggplot(traindata, aes(x = reorder(单位名称, -rep(1, length(单位名称)), sum))) + geom_bar(fill = "#548687") +
labs(x = '单位名称', y = '市民投诉量', title = '训练集中各个政府单位接到市民投诉量的柱状图')
ggplot(traindata, aes(wordcount))
wordcount <- rowsums(traindata[, 2:ncol(traindata)])
wordcount <- Rowsums(traindata[, 2:ncol(traindata)])
wordcount <- rowSums(traindata[, 2:ncol(traindata)])
ggplot(traindata, aes(wordcount))
ggplot(traindata, aes(wordcount)) + geom_histogram()
ggplot(traindata, aes(wordcount)) + geom_histogram(fill = '#548687') +
labs(x = '投诉用词数', y = '用词量出现的频数', title = '投诉用词量直方图')
ggplot(traindata, aes(wordcount)) + geom_histogram(fill = '#548687') +
labs(x = '投诉用词数', y = '用词量出现的频数', title = '投诉用词量直方图') +
scale_x_continuous(seq(0, 150, 10))
ggplot(traindata, aes(wordcount)) + geom_histogram(fill = '#548687') +
labs(x = '投诉用词数', y = '用词量出现的频数', title = '投诉用词量直方图') +
scale_x_continuous(breaks = seq(0, 150, 10))
ggplot(traindata, aes(wordcount)) + geom_histogram(fill = '#548687') +
labs(x = '投诉用词数', y = '用词量出现的频数', title = '投诉用词量直方图') +
scale_x_continuous(breaks = seq(0, 150, 20))
traindata$wordcount <- rowSums(traindata[, 2:ncol(traindata)])
ggplot(traindata, aes(wordcount)) + geom_histogram(fill = '#548687') +
labs(x = '投诉用词数', y = '用词量出现的频数', title = '投诉用词量直方图') +
scale_x_continuous(breaks = seq(0, 150, 20))
ggplot(traindata, aes(x = 单位名称, y = wordcount)) +
geom_boxplot(fill = "#548687")
ggplot(traindata, aes(x = reorder(单位名称, wordcount, median), y = wordcount)) +
geom_boxplot(fill = "#548687")
ggplot(traindata, aes(x = reorder(单位名称, wordcount, median), y = log(wordcount))) +
geom_boxplot(fill = "#548687")
ggplot(traindata, aes(x = reorder(单位名称, wordcount, median), y = log(wordcount))) +
geom_boxplot()
fill = "#548687"
ggplot(traindata, aes(x = reorder(单位名称, wordcount, median), y = log(wordcount))) +
geom_boxplot(fill = "#548687")
ggplot(traindata, aes(x = reorder(单位名称, wordcount, median), y = log(wordcount))) +
geom_boxplot(fill = "#8FBC94")
#548687
ggplot(traindata, aes(x = reorder(单位名称, wordcount, median), y = log(wordcount))) +
geom_boxplot(fill = "#548687")
ggplot(traindata, aes(x = reorder(单位名称, wordcount, median), y = log(wordcount))) +
geom_boxplot(fill = "#548687") +
labs(x = '单位名称', y = '对数投诉用词量', title = '对数投诉用词量-单位箱线图')
ggplot(traindata, aes(x = reorder(单位名称, wordcount, median), y = log(wordcount))) +
geom_boxplot(fill = "#548687") +
labs(x = '单位名称', y = '对数投诉用词量', title = '对数投诉用词量-单位的箱线图')
library(e1071)
traindata.aug[,2:ncol(traindata.aug)] <- (traindata[,2:ncol(traindata)] > 0 )
traindata.aug <- traindata
traindata.aug[,2:ncol(traindata.aug)] <- (traindata[,2:ncol(traindata)] > 0 )
?naiveBayes
nbm <- naiveBayes(单位名称~., data = traindata.aug)
head(testdata)
head(traindata)
pred <- predict(nbm, testdata.aug[, 2:ncol(testdata.aug)])
traindata.aug <- traindata
traindata.aug[,2:ncol(traindata.aug)] <- traindata[,2:ncol(traindata)] > 0
testdata.aug <- testdata
testdata.aug[,2:ncol(testdata.aug)] <- testdata[,2:ncol(testdata)] > 0
nbm <- naiveBayes(单位名称~., data = traindata.aug)
pred <- predict(nbm, testdata.aug[, 2:ncol(testdata.aug)])
pred
length(pred)
length(testdata)
dim(testdata)
image(pred)
image(matrix(pred))
table(testdata.aug[,1], pred)
confusion.matrix <- table(testdata.aug[,1], pred)
image(confusion.matrix)
image(confusion.matrix, col = hcl.colors)
image(confusion.matrix, col)
image(confusion.matrix)
library(graphics)
image(confusion.matrix)
?image
library(grDevices)
image(confusion.matrix, col = hcl.colors())
confusion.matrix
image(confusion.matrix, col = hcl.colors(n = 7, palette = "Greens 3"))
image(confusion.matrix, col = hcl.colors(n = 7, palette = "Greens 3", rev = T))
image(confusion.matrix, col = hcl.colors(n = 7, palette = "viridis", rev = T))
image(confusion.matrix, col = hcl.colors(n = 7, palette = "viridis"))
image(confusion.matrix, col = hcl.colors(n = 10, palette = "viridis"))
image(confusion.matrix, col = hcl.colors(n = 10, palette = "viridis"))
image(confusion.matrix, col = hcl.colors(n = 11, palette = "viridis"))
image(confusion.matrix, col = hcl.colors(n = 11, palette = "Green 3"))
image(confusion.matrix, col = hcl.colors(n = 11, palette = "Greens 3"))
image(confusion.matrix, col = hcl.colors(n = 11, palette = "Greens 3", rev = T))
image(confusion.matrix, col = hcl.colors(n = 10, palette = "Greens 3", rev = T))
image(confusion.matrix, col = hcl.colors(n = 11, palette = "Greens 3", rev = T))
image(confusion.matrix, col = hcl.colors(n = 20, palette = "Greens 3", rev = T))
image(confusion.matrix, col = hcl.colors(n = 32, palette = "Greens 3", rev = T))
使用朴素贝叶斯模型对训练集数据进行建模：
```{r}
nbm <- naiveBayes(单位名称~., data = traindata.aug)
```
pred <- predict(nbm, testdata.aug[, 2:ncol(testdata.aug)])
confusion.matrix <- table(testdata.aug[,1], pred)
image(confusion.matrix, col = hcl.colors(n = 32, palette = "Greens 3", rev = T))
pred <- predict(nbm, testdata.aug[, 2:ncol(testdata.aug)])
confusion.matrix <- table(testdata.aug[,1], pred)
image(confusion.matrix, col = hcl.colors(n = 32, palette = "Greens 3", rev = T))
axis(1, at = seq(0, 1, length = nrow(confusion.matrix)), labels = rownames(confusion.matrix))
axis(2, at = seq(0, 1, length = ncol(confusion.matrix)), labels = colnames(confusion.matrix))
image(confusion.matrix, col = hcl.colors(n = 32, palette = "Greens 3", rev = T), axes = F)
axis(1, at = seq(0, 1, length = nrow(confusion.matrix)), labels = rownames(confusion.matrix))
image(confusion.matrix, col = hcl.colors(n = 32, palette = "Greens 3", rev = T), axes = F)
axis(1, at = seq(0, 1, length = nrow(confusion.matrix)), labels = rownames(confusion.matrix))
axis(2, at = seq(0, 1, length = ncol(confusion.matrix)), labels = colnames(confusion.matrix))
image.real(confusion.matrix, col = hcl.colors(n = 32, palette = "Greens 3", rev = T), axes = F)
rownames(confusion.matrix)
image(confusion.matrix, col = hcl.colors(n = 32, palette = "Greens 3", rev = T), axes = F)
axis(1, at = seq(0, 1, length = nrow(confusion.matrix)), labels = rownames(confusion.matrix))
axis(2, at = seq(0, 1, length = ncol(confusion.matrix)), labels = colnames(confusion.matrix))
par(las=2)
image(confusion.matrix, col = hcl.colors(n = 32, palette = "Greens 3", rev = T), axes = F)
axis(1, at = seq(0, 1, length = nrow(confusion.matrix)), labels = rownames(confusion.matrix))
axis(2, at = seq(0, 1, length = ncol(confusion.matrix)), labels = colnames(confusion.matrix))
par(mar=c(5.1, 4.1, 4.1, 2.1), las=2)
par(mar=c(5.1, 4.1, 4.1, 2.1), las=2)
image(confusion.matrix, col = hcl.colors(n = 32, palette = "Greens 3", rev = T), axes = F)
axis(1, at = seq(0, 1, length = nrow(confusion.matrix)), labels = rownames(confusion.matrix))
axis(2, at = seq(0, 1, length = ncol(confusion.matrix)), labels = colnames(confusion.matrix))
par(mar=c(6.1, 4.1, 4.1, 2.1), las=2)
par(mar=c(6.1, 4.1, 4.1, 2.1), las=2)
image(confusion.matrix, col = hcl.colors(n = 32, palette = "Greens 3", rev = T), axes = F)
axis(1, at = seq(0, 1, length = nrow(confusion.matrix)), labels = rownames(confusion.matrix))
axis(2, at = seq(0, 1, length = ncol(confusion.matrix)), labels = colnames(confusion.matrix))
par(mar=c(10.1, 4.1, 4.1, 2.1), las=2)
image(confusion.matrix, col = hcl.colors(n = 32, palette = "Greens 3", rev = T), axes = F)
axis(1, at = seq(0, 1, length = nrow(confusion.matrix)), labels = rownames(confusion.matrix))
axis(2, at = seq(0, 1, length = ncol(confusion.matrix)), labels = colnames(confusion.matrix))
par(mar=c(5.1, 4.1, 4.1, 2.1), las=2)
image(confusion.matrix, col = hcl.colors(n = 32, palette = "Greens 3", rev = T), axes = F)
axis(1, at = seq(0, 1, length = nrow(confusion.matrix)), labels = rownames(confusion.matrix))
axis(2, at = seq(0, 1, length = ncol(confusion.matrix)), labels = colnames(confusion.matrix))
par(mar=c(4.1, 4.1, 4.1, 2.1), las=2)
image(confusion.matrix, col = hcl.colors(n = 32, palette = "Greens 3", rev = T), axes = F)
axis(1, at = seq(0, 1, length = nrow(confusion.matrix)), labels = rownames(confusion.matrix))
axis(2, at = seq(0, 1, length = ncol(confusion.matrix)), labels = colnames(confusion.matrix))
par(mar=c(5.1, 4.1, 4.1, 2.1), las=2)
image(confusion.matrix, col = hcl.colors(n = 32, palette = "Greens 3", rev = T), axes = F)
axis(1, at = seq(0, 1, length = nrow(confusion.matrix)), labels = rownames(confusion.matrix))
axis(2, at = seq(0, 1, length = ncol(confusion.matrix)), labels = colnames(confusion.matrix))
par(mar=c(5.1, 5.1, 4.1, 2.1), las=2)
image(confusion.matrix, col = hcl.colors(n = 32, palette = "Greens 3", rev = T), axes = F)
axis(1, at = seq(0, 1, length = nrow(confusion.matrix)), labels = rownames(confusion.matrix))
axis(2, at = seq(0, 1, length = ncol(confusion.matrix)), labels = colnames(confusion.matrix))
par(mar=c(5.1, 4.1, 5.1, 2.1), las=2)
image(confusion.matrix, col = hcl.colors(n = 32, palette = "Greens 3", rev = T), axes = F)
axis(1, at = seq(0, 1, length = nrow(confusion.matrix)), labels = rownames(confusion.matrix))
axis(2, at = seq(0, 1, length = ncol(confusion.matrix)), labels = colnames(confusion.matrix))
par(mar=c(5.1, 4.1, 4.1, 2.1), las=2)
image(confusion.matrix, col = hcl.colors(n = 32, palette = "Greens 3", rev = T), axes = F)
axis(1, at = seq(0, 1, length = nrow(confusion.matrix)), labels = rownames(confusion.matrix))
axis(2, at = seq(0, 1, length = ncol(confusion.matrix)), labels = colnames(confusion.matrix))
par(mar=c(5.1, 4.1, 4.1, 3.1), las=2)
image(confusion.matrix, col = hcl.colors(n = 32, palette = "Greens 3", rev = T), axes = F)
axis(1, at = seq(0, 1, length = nrow(confusion.matrix)), labels = rownames(confusion.matrix))
axis(2, at = seq(0, 1, length = ncol(confusion.matrix)), labels = colnames(confusion.matrix))
par(mar=c(5.1, 4.1, 4.1, 5.1), las=2)
image(confusion.matrix, col = hcl.colors(n = 32, palette = "Greens 3", rev = T), axes = F)
axis(1, at = seq(0, 1, length = nrow(confusion.matrix)), labels = rownames(confusion.matrix))
axis(2, at = seq(0, 1, length = ncol(confusion.matrix)), labels = colnames(confusion.matrix))
par(mar=c(5.1, 2.1, 4.1, 2.1), las=2)
image(confusion.matrix, col = hcl.colors(n = 32, palette = "Greens 3", rev = T), axes = F)
axis(1, at = seq(0, 1, length = nrow(confusion.matrix)), labels = rownames(confusion.matrix))
axis(2, at = seq(0, 1, length = ncol(confusion.matrix)), labels = colnames(confusion.matrix))
par(mar=c(5.1, 6.1, 4.1, 2.1), las=2)
image(confusion.matrix, col = hcl.colors(n = 32, palette = "Greens 3", rev = T), axes = F)
axis(1, at = seq(0, 1, length = nrow(confusion.matrix)), labels = rownames(confusion.matrix))
axis(2, at = seq(0, 1, length = ncol(confusion.matrix)), labels = colnames(confusion.matrix))
?image
confusion.matrix
title('朴素贝叶斯模型在测试集上预测结果的混淆矩阵')
par(mar=c(5.1, 6.1, 4.1, 2.1), las=2)
image(confusion.matrix, col = hcl.colors(n = 32, palette = "Greens 3", rev = T), axes = F)
axis(1, at = seq(0, 1, length = nrow(confusion.matrix)), labels = rownames(confusion.matrix))
axis(2, at = seq(0, 1, length = ncol(confusion.matrix)), labels = colnames(confusion.matrix))
title('朴素贝叶斯模型在测试集上预测结果的混淆矩阵')
confusion.matrix
options(knitr.table.format = "html")
confusion.matrix <- table(testdata.aug[,1], pred)
confusion.matrix
library(kable)
library(kableExtra)
confusion.matrix
kable(confusion.matrix)
dim(traindata)
confusion.matrix <- table(testdata.aug[,1], pred)
confusion.matrix
ggplot(traindata, aes(x = reorder(单位名称, -rep(1, length(单位名称)), sum))) + geom_bar(fill = hcl.colors(n = 7, palette = "Greens 3")) +
labs(x = '单位名称', y = '市民投诉量', title = '训练集中各个政府单位接到市民投诉量的柱状图')
ggplot(traindata, aes(x = reorder(单位名称, -rep(1, length(单位名称)), sum))) + geom_bar(fill = hcl.colors(n = 8, palette = "Greens 3")) +
labs(x = '单位名称', y = '市民投诉量', title = '训练集中各个政府单位接到市民投诉量的柱状图')
ggplot(traindata, aes(x = reorder(单位名称, -rep(1, length(单位名称)), sum))) + geom_bar(fill = hcl.colors(n = 7, palette = "Greens 3")) +
labs(x = '单位名称', y = '市民投诉量', title = '训练集中各个政府单位接到市民投诉量的柱状图')
ggplot(traindata, aes(x = reorder(单位名称, -rep(1, length(单位名称)), sum))) + geom_bar(fill = hcl.colors(n = 7, palette = "Greens 2")) +
labs(x = '单位名称', y = '市民投诉量', title = '训练集中各个政府单位接到市民投诉量的柱状图')
ggplot(traindata, aes(x = reorder(单位名称, -rep(1, length(单位名称)), sum))) + geom_bar(fill = hcl.colors(n = 7, palette = "Greens")) +
labs(x = '单位名称', y = '市民投诉量', title = '训练集中各个政府单位接到市民投诉量的柱状图')
ggplot(traindata, aes(x = reorder(单位名称, -rep(1, length(单位名称)), sum))) + geom_bar(fill = hcl.colors(n = 7, palette = "Greens")) +
labs(x = '单位名称', y = '市民投诉量', title = '训练集中各个政府单位接到市民投诉量的柱状图')
traindata$wordcount <- rowSums(traindata[, 2:ncol(traindata)])
ggplot(traindata, aes(wordcount)) + geom_histogram(fill = hcl.colors(n=1, palette = "Greens")) +
labs(x = '投诉用词数', y = '用词量出现的频数', title = '投诉用词量直方图') +
scale_x_continuous(breaks = seq(0, 150, 20))
traindata$wordcount <- rowSums(traindata[, 2:ncol(traindata)])
ggplot(traindata, aes(wordcount)) + geom_histogram(fill = '#548687') +
labs(x = '投诉用词数', y = '用词量出现的频数', title = '投诉用词量直方图') +
scale_x_continuous(breaks = seq(0, 150, 20))
traindata$wordcount <- rowSums(traindata[, 2:ncol(traindata)])
ggplot(traindata, aes(wordcount)) + geom_histogram(fill = '#548687') +
labs(x = '投诉用词数', y = '用词量出现的频数', title = '投诉用词量直方图') +
scale_x_continuous(breaks = seq(0, 150, 20))
ggplot(traindata, aes(x = reorder(单位名称, -rep(1, length(单位名称)), sum))) + geom_bar(fill = "#548687") +
labs(x = '单位名称', y = '市民投诉量', title = '训练集中各个政府单位接到市民投诉量的柱状图')
traindata$wordcount <- rowSums(traindata[, 2:ncol(traindata)])
ggplot(traindata, aes(wordcount)) + geom_histogram(fill = '#548687') +
labs(x = '投诉用词数', y = '用词量出现的频数', title = '投诉用词量直方图') +
scale_x_continuous(breaks = seq(0, 150, 20))
traindata$wordcount <- rowSums(traindata[, 2:ncol(traindata)])
ggplot(traindata, aes(wordcount)) + geom_histogram(fill = '#548687') +
labs(x = '投诉用词数', y = '用词量出现的频数', title = '投诉用词量直方图')
#  scale_x_continuous(breaks = seq(0, 150, 20))
traindata <- read.csv("train_set.csv")
testdata <- read.csv("test_set.csv")
traindata$wordcount <- rowSums(traindata[, 2:ncol(traindata)])
ggplot(traindata, aes(wordcount)) + geom_histogram(fill = '#548687') +
labs(x = '投诉用词数', y = '用词量出现的频数', title = '投诉用词量直方图')
#  scale_x_continuous(breaks = seq(0, 150, 20))
rm(list = ls())
